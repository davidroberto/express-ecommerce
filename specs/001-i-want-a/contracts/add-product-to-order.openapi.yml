openapi: 3.0.3
info:
  title: Add Product to Order API
  description: API contract for adding products to existing orders
  version: 1.0.0
  contact:
    name: Express E-Commerce Team

servers:
  - url: http://localhost:3000/api
    description: Local development server

paths:
  /orders/{orderId}/products:
    post:
      summary: Add product to order
      description: |
        Adds a product to an existing order. If the product already exists in the order,
        increments its quantity instead of creating a duplicate entry.

        Business rules enforced:
        - Maximum 5 distinct products per order
        - Maximum 500€ total amount per order
        - Maximum 10 units per product
        - Product and order must exist
        - User must be authenticated
      operationId: addProductToOrder
      tags:
        - Orders
      security:
        - auth: []
      parameters:
        - name: orderId
          in: path
          required: true
          description: ID of the order to add the product to
          schema:
            type: integer
            minimum: 1
          example: 10
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AddProductRequest'
            examples:
              addNewProduct:
                summary: Add new product with quantity 1
                value:
                  productId: 5
                  quantity: 1
              addNewProductMultiple:
                summary: Add new product with quantity 3
                value:
                  productId: 7
                  quantity: 3
              incrementExisting:
                summary: Increment existing product (quantity defaults to 1)
                value:
                  productId: 5
      responses:
        '200':
          description: Product successfully added or quantity incremented
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SuccessResponse'
              examples:
                productAdded:
                  summary: New product added
                  value:
                    message: "Produit ajouté à la commande"
                    order:
                      id: 10
                      totalAmount: 180
                      itemCount: 3
                quantityIncremented:
                  summary: Existing product quantity incremented
                  value:
                    message: "Quantité du produit incrémentée"
                    order:
                      id: 10
                      totalAmount: 210
                      itemCount: 3
        '400':
          description: Validation error - business rule violated
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                maxProducts:
                  summary: Maximum 5 products limit reached
                  value:
                    message: "le nombre maximum de produits distincts (5) est atteint"
                maxAmount:
                  summary: Total amount would exceed 500€
                  value:
                    message: "le montant total ne doit pas dépasser 500€"
                maxQuantity:
                  summary: Quantity would exceed 10 units
                  value:
                    message: "la quantité ne peut pas dépasser 10 unités"
                invalidQuantity:
                  summary: Quantity must be positive
                  value:
                    message: "la quantité doit être supérieure à 0"
                missingFields:
                  summary: Required field missing
                  value:
                    message: "Missing required fields"
        '404':
          description: Order or product not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                orderNotFound:
                  summary: Order does not exist
                  value:
                    message: "commande non trouvée"
                productNotFound:
                  summary: Product does not exist
                  value:
                    message: "produit non trouvé"
        '401':
          description: User not authenticated
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              example:
                message: "Authentication required"

components:
  schemas:
    AddProductRequest:
      type: object
      required:
        - productId
      properties:
        productId:
          type: integer
          minimum: 1
          description: ID of the product to add
          example: 5
        quantity:
          type: integer
          minimum: 1
          maximum: 10
          default: 1
          description: Number of units to add (defaults to 1 if omitted)
          example: 2

    SuccessResponse:
      type: object
      required:
        - message
        - order
      properties:
        message:
          type: string
          description: Success message in French
          example: "Produit ajouté à la commande"
        order:
          type: object
          required:
            - id
            - totalAmount
            - itemCount
          properties:
            id:
              type: integer
              description: Order ID
              example: 10
            totalAmount:
              type: number
              format: float
              description: Total order amount in euros
              example: 180.50
            itemCount:
              type: integer
              description: Number of distinct products in order
              example: 3

    ErrorResponse:
      type: object
      required:
        - message
      properties:
        message:
          type: string
          description: Error message in French
          example: "le nombre maximum de produits distincts (5) est atteint"

  securitySchemes:
    auth:
      type: http
      scheme: bearer
      description: |
        Authentication required. Implementation details not specified in this feature scope.
        Any authenticated user can add products to any order (no ownership enforcement).

tags:
  - name: Orders
    description: Order management operations